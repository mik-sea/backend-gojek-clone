import Head from 'next/head'

import { MongoClient } from 'mongodb'
import Layout from '../../components/Layout'
import { Fragment } from 'react'

export default function RestaurantDetail(props) {
  return (
    <Fragment>
      <Head>
        <title>GoFood - {props.data.restaurant}</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Layout
        skips={true}
        page={`${props.data.restaurant} Restaurant`}
        description={`This is ${props.data.restaurant} restaurant`}
      >
        <div className='grid grid-cols-4 my-12'>
          {props.data.menus.map((item, index) => (
            <div
              className='cursor-pointer rounded-md border border-[#eaeaea] hover:border-[#0070f3] hover:text-[#0070f3] transition ease-in-out duration-200 p-4 m-4'
              key={index}
            >
              <h2 className='capitalize font-semibold text-xl'>{item.name}</h2>
              <p>
                Rp. {item.price}
                <small>/pcs</small>
              </p>
            </div>
          ))}
        </div>
      </Layout>
    </Fragment>
  )
}

export async function getStaticPaths() {
  // const client = await MongoClient.connect(
  //   'mongodb+srv://adminclone:adminclone@cluster0.cr4db.mongodb.net/db_gojek?retryWrites=true&w=majority'
  // )
  // const db = client.db()
  // const collections = db.collection('go_food')
  // const restaurants = await collections.find({}, { _id: 1 }).toArray()
  // client.close()
  const data = await fetch("https://project-uts.vercel.app/api/getRestaurant");
  const restaurants = await data.json();
  const paths = restaurants.map((item) => ({
    params: { restaurant: item.name },
  }))

  return {
    paths,
    fallback: false,
  }
}

export async function getStaticProps(context) {
  const restaurant = context.params.restaurant

  // const client = await MongoClient.connect(
  //   'mongodb+srv://adminclone:adminclone@cluster0.cr4db.mongodb.net/db_gojek?retryWrites=true&w=majority'
  // )
  // const db = client.db()
  // const collections = db.collection('go_food')
  // const result = await collections.findOne({ restaurant: restaurant })
  // client.close()
  const data = await fetch(`https://project-uts.vercel.app/api/menu/${restaurant}`);
  const result = await data.json();
  // console.log(restaurant)

  return {
    props: {
      data: { ...result},
    },
    revalidate: 1,
  }
}
